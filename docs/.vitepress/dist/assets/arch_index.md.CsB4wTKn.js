import{_ as s,c as a,o as e,a5 as n}from"./chunks/framework.Djspl_t8.js";const b=JSON.parse('{"title":"","description":"","frontmatter":{},"headers":[],"relativePath":"arch/index.md","filePath":"arch/index.md"}'),i={name:"arch/index.md"},l=n(`<h2 id="制作启动盘" tabindex="-1">制作启动盘: <a class="header-anchor" href="#制作启动盘" aria-label="Permalink to &quot;制作启动盘:&quot;">​</a></h2><ol><li>去<a href="https://archlinux.org/download/" target="_blank" rel="noreferrer">官网</a>下载 china tuna ISO 镜像，插入 U 盘。</li><li>用<code>lsblk</code>查看 U 盘信息，找到插入的 U 盘。</li><li>将该 U 盘取消挂载，如<code>umount /dev/sda</code></li><li>将镜像文件写入 U 盘，<code>sudo dd if=***.iso of=/dev/sda</code></li></ol><hr><h2 id="基本系统安装" tabindex="-1">基本系统安装: <a class="header-anchor" href="#基本系统安装" aria-label="Permalink to &quot;基本系统安装:&quot;">​</a></h2><ol><li>进入 BIOS，选择 UEFI 启动</li><li>禁止终端蜂鸣器: <code>rmmod pcspkr</code></li><li>确认是否为 UEFI 模式:<code>ls /sys/firmware/efi/efivars</code></li><li>联网: <code>iwctl</code>进入交互式，<code>device list</code>查看网卡名，比如 wlan0，<code>station wlan0 scan</code>扫描网络，<code>station wlan0 get-networks</code>列出网络，<code>station wlan0 connect wifi-name</code>联网，<code>exit</code>退出，<code>ping bing.com</code>查看是否联网。</li><li>校时: <code>timedatectl set-ntp true</code>，<code>timedatectl status</code>验证是否成功</li><li>换源: <code>vim /etc/pacman.d/mirrorlist</code>，<code>Server = https://mirrors.tuna.tsinghua.edu.cn/archlinux/$repo/os/$arch # 清华大学开源软件镜像站</code></li><li>转换磁盘为 GPT 类型:<code>parted /dev/nvmexn1</code>， 输入<code>mktable</code>，然后 gpt，yes，最后 quit</li><li><code>cfdisk</code>，先建立 512MB 的 EFI 分区，再创建大于内存 60％的 swap 分区，最后剩余空间全部分给 btrfs 系统分区。</li><li>格式化 EFI 分区:<code>mkfs.fat -F32 /dev/nvmexn1p1</code>，格式化 swap 分区<code>mkswap /dev/nvmexn1p2</code>，<code>mkfs.btrfs -L myArch /dev/nvmexn1p3</code>。</li><li>创建 btrfs 子卷:，先挂载 btrfs 分区到/mnt:， <code>mount -t btrfs -o compress=zstd /dev/nvmexn1p3 /mnt</code>，<code>df -h</code>查看是否挂载成功，<code>btrfs subvolume create /mnt/@ </code> 创建根目录子卷，<code>btrfs subvolume create /mnt/@home</code> 创建 home 子卷，<code>btrfs subvolume list -p /mnt</code>，查看挂载情况。将/mnt 卸载以挂载子卷，<code>umount /mnt</code>。</li><li>挂载各分区和以及子卷<code>mount -t btrfs -o subvol=/@,compress=zstd /dev/nvmexn1p3 /mnt</code> 挂载 / 目录。 <code>mkdir /mnt/home</code> ，创建 /home 目录，<code>mount -t btrfs -o subvol=/@home,compress=zstd /dev/nvmexn1p3 /mnt/home</code> ， 挂载 /home 目录。<code>mkdir -p /mnt/boot</code> # 创建 /boot 目录，<code>mount /dev/nvmexn1p1 /mnt/boot</code> # 挂载 /boot 目录。<code>swapon /dev/nvmexn1p2</code> # 挂载交换分区。<code>df -h</code>查看挂载情况，<code>free -h</code>查看交换分区挂载情况。</li><li>安装基础包和基础软件: <code>pacstrap /mnt base base-devel linux linux-firmware btrfs-progs networkmanager neovim sudo zsh zsh-completions pacman</code>。</li><li>根据挂载情况生成定义磁盘分区的文件/etc/fstab，<code>genfstab -U /mnt &gt; /mnt/etc/fstab</code>，要确保无误<code>cat /mnt/etc/fstab</code></li><li>切换到新安装的系统，<code>arch-chroot /mnt</code></li><li>设置主机名和时区，<code>nvim /etc/hostname</code>，键入主机名，如 tzgml，然后<code>nvim /etc/hosts</code>，输入如下:</li></ol><div class="language-shell vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">127.0.0.1</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">   localhost</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">:</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">:1</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">         localhost</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">127.0.1.1</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">   tzgml.localdomain</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> tzgml</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><ol><li>设置时区，<code>ln -sf /usr/share/zoneinfo/Asia/Shanghai /etc/localtime</code></li><li>将系统时间同步到硬件时间，<code>hwclock --systohc</code>。</li><li>设置 locale，<code>nvim /etc/locale.gen</code>，去掉<code>en_US.UTF-8 UTF-8</code>和<code> zh_CN.UTF-8 UTF-8</code> 注释，然后生成 locale: <code>locale-gen</code>，设置 locale: <code>echo &#39;LANG=en_US.UTF-8&#39; &gt; /etc/locale.conf</code>，在这里先不能设置中文 locale。</li><li><code> passwd root</code>，为 root 设置密码。</li><li><code>pacman -S amd-ucode</code>安装显卡微码，比如 amd。</li><li>安装引导程序，<code>pacman -S grub efibootmgr os-prober</code>，安装 grub 到 efi 分区，<code>grub-install --target=x86_64-efi --efi-directory=/boot --bootloader-id=ARCH</code>，编辑<code>nvim /etc/default/grub</code>，<code>GRUB_CMDLINE_LINUX_DEFAULT</code>把<code>quiet</code>去掉改成<code>nowatchdog</code>，<code>loglevel</code>从 3 改成 5。再加入一行<code>GRUB_DISABLE_OS_PROBER=false</code>引导 win10。禁用子菜单<code>GRUB_DEFAULT_SUBMENU=y</code>，缩短启动时间<code>GRUB_TIMEOUT=2</code>，更改系统名称<code>GRUB_DISTRIBUTOR=&quot;Arch&quot;</code>，最终生成 grub 配置文件，<code>grub-mkconfig -o /boot/grub/grub.cfg</code></li><li><code>exit</code>退出 chroot 环境，换到 iso 中。<code>umount -R /mnt</code>，卸载新分区，拔掉 U 盘，<code>reboot</code>重启进入 arch。第一阶段安装结束。</li></ol><hr><h2 id="系统初始化" tabindex="-1">系统初始化 <a class="header-anchor" href="#系统初始化" aria-label="Permalink to &quot;系统初始化&quot;">​</a></h2><ol><li>重启后进入 tty1，root 为账户名，登录后联网: <code>systemctl enable --now NetworkManager</code>设置网络管理器开机自启，<code>nmcli dev wifi list </code>用于显示附近的 Wi-Fi ，<code>nmcli dev wifi connect &quot;Wi-Fi名&quot; password &quot;网络密码&quot;</code>联网，然后 ping 个地址测试。</li><li><code>pacman -Syyu</code>，更新整个系统</li><li>增加普通用户:<code>useradd -m -G wheel -s /bin/bash tzgml</code>，<code>passwd tzgml</code>设置密码，更改 sudo 设置<code>sudo nvim /etc/sudoers</code>，把<code>%wheel ALL=(ALL:ALL) NOPASSWD: ALL</code>和<code>%sudo ALL=(ALL) NOPASSWD: ALL</code>和<code>ALL ALL=(ALL) NOPASSWD: ALL</code>改成上述模样并取消注释，当然根据具体情况调整，主要是加 NOPASSWD 参数。然后<code>su tzgml</code>切换到普通用户。</li><li>配置 pacman，<code>sudo nvim /etc/pacman.conf</code>，去掉 color 注释开启彩色输出，然后<code>CleanMethod = KeepCurrent</code>减少缓存包保留，<code>ParallelDownloads = 同时下载数量</code>开启并行下载。最后去掉<code>[multilib]</code>那两行的注释开启 32 位库支持，末尾添加 archlinuxcn 源，最后别忘<code>pacman -Syyu</code>:</li></ol><div class="language-shell vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">[archlinuxcn]</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">Server</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> =</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> https://mirrors.tuna.tsinghua.edu.cn/archlinuxcn/</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">$arch </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 清华大学开源软件镜像站</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><ol start="5"><li>在本地信任 farseerfc 的 key，<code>sudo pacman-key --lsign-key &quot;farseerfc@archlinux.org&quot;</code>，然后<code>sudo pacman -Syyu</code>，然后安装<code>sudo pacman -S archlinuxcn-keyring</code>，再<code>sudo pacman -Syyu</code></li><li>安装基础功能包如下:</li></ol><div class="language-shell vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">sudo</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> pacman</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -S</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> sof-firmware</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> alsa-firmware</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> alsa-ucm-conf</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> # 声音固件</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">sudo</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> pacman</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -S</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> ntfs-3g</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> # 可识别 NTFS 格式硬盘</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">sudo</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> pacman</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -S</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> wqy-zenhei</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> # 上文泉驿字体解决大多 wine 应用中文方块的问题</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">sudo</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> pacman</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -S</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> noto-fonts</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> noto-fonts-cjk</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> noto-fonts-emoji</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> noto-fonts-extra</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> # 谷歌开源字体及表情</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">sudo</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> pacman</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -S</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> yay</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> #AUR助手</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">sudo</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> pacman</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -S</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> nerd-fonts-victor-mono</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> #nerd字体zsh主体和nvim的powerline乱码</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">sudo</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> pacman</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -S</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> noto-fonts-emoji</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> #解决不显示emoji的问题，如果还不显示，则fc-cache，然后reboot</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">yay</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -S</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">  ttf-harmonyos-sans</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> #鸿蒙字体，解决hcml乱码</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br></div></div><ol start="7"><li>安装桌面环境，比如 hyprland，如下:</li></ol><div class="language-shell vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">git</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> clone</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --depth=1</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> https://github.com/JaKooLit/Arch-Hyprland.git</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">cd</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> Arch-Hyprland</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">chmod</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> +x</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> install.sh</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">./install.sh</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div><p>或者 plasma，安装<code>pacman -S plasma-meta plasma-workspace xdg-desktop-portal konsole dolphin ark packagekit-qt6 packagekit appstream-qt appstream </code>，N 卡用户要装<code>egl-wayland</code>。装完桌面要<code>systemctl enable --now sddm</code>，进入 sddm 再进桌面。检查家目录，<code>Desktop Documents Downloads Music Pictures Videos</code> 8. 启用蓝牙<code>sudo systemctl enable --now bluetooth</code> 9. 安装 AMD 显卡驱动: <code>sudo pacman -S mesa lib32-mesa xf86-video-amdgpu vulkan-radeon lib32-vulkan-radeon</code> 10. 更改系统语言为中文: <code>sudo nvim /etc/locale.gen</code>，添加<code>zh_CN.UTF-8 UTF-8</code>，然后<code>sudo locale-gen</code>，然后<code>sudo nvim /etc/environment</code>，添加<code>LANG=zh_CN.UTF-8</code>。 11. <code>sudo nvim /etc/systemd/system.conf</code>，找到<code>DefaultTimeoutStopSec</code>和<code>DefaultTimeoutStartSec</code>，取消注释，值改成 30s，然后<code>sudo systemctl daemon-reload</code>，改变开关机被阻碍问题。 12. <code>sudo nvim /etc/systemd/journald.conf</code>，然后<code>Storage=none</code>，之后<code>sudo journalctl --vacuum-size=0M &amp;&amp; sudo journalctl --vacuum-time=0s</code>，<code>sudo rm -rf /var/log/* &amp;&amp; sudo rm -rf /run/log/journal/*</code>。然后<code>sudo pacman -Scc &amp;&amp; yay -Scc</code>，然后<code>sudo paccache -rk0[[]]</code>。 13. 重启检查，基础系统安装完毕！</p><hr><h2 id="配置代理" tabindex="-1">配置代理 <a class="header-anchor" href="#配置代理" aria-label="Permalink to &quot;配置代理&quot;">​</a></h2><p>v2ray:</p><ol><li>安装 v2ray 与 v2raya:<code>sudo pacman -S v2ray v2raya</code></li><li>设置开机启动并立刻执行，<code>sudo systemctl enable --now v2ray v2raya</code></li><li>打开浏览器进入 127.0.0.1:2017</li><li>打开机场，导出订阅，并寻找节点列表</li></ol><ul><li><a href="https://ikuuu.pw/" target="_blank" rel="noreferrer">ikuuuvpn 免费 50GB/月</a></li><li><a href="https://owo.ecycloud.com/auth/register?code=kApr4ea5GB" target="_blank" rel="noreferrer">ecycloud10GB/月免费</a></li><li>将节点 vmess 链接复制到 v2ray 的 SERVER 中，点击设置，透明代理和规则端口的分流模式选择大陆白名单模式，透明代理实现方式选择 tproxy，需要 docker 则选择 redirect。防止 DNS 污染选择 DOH。</li></ul><ol start="5"><li>点击启动，去谷歌测试</li></ol><p>clash:</p><ol><li><code>sudo pacman -S clash clash-geoip clash-meta clash-verge</code></li><li>开启系统代理，Tun 模式，局域网连接和 ipv6，导入配置文件或链接，点击使用，再去测试里一键测试。</li><li><a href="https://www.glados.rocks/" target="_blank" rel="noreferrer">GLADOS 机场</a></li></ol><div class="important custom-block github-alert"><p class="custom-block-title">IMPORTANT</p><p>终端可能不遵循代理配置,导入环境变量: export HTTP_PROXY=&quot;<a href="http://127.0.0.1:7897" target="_blank" rel="noreferrer">http://127.0.0.1:7897</a>&quot; &amp;&amp; export HTTPS_PROXY=&quot;<a href="https://127.0.0.1:7897" target="_blank" rel="noreferrer">https://127.0.0.1:7897</a>&quot;</p></div><h2 id="更换内核" tabindex="-1">更换内核 <a class="header-anchor" href="#更换内核" aria-label="Permalink to &quot;更换内核&quot;">​</a></h2><p>一, 从源中直接安装:</p><ol><li>安装 linux-xanmod-lts 内核 <code>sudo pacman -S linux-xanmod linux-xanmod-headers</code></li><li>卸载 linux 原版内核，<code>sudo pacman -Rns linux linux-firmware</code></li><li>更新 grub 配置，<code>grub-mkconfig -o /boot/grub/grub.cfg</code>，这一步一定要有！否则删除旧内核后会进不了系统！如果忘了进入 iso，挂载 btrfs 分区到/mnt，再挂载 boot 分区到/mnt/boot，然后<code>arch-chroot /mnt</code>，然后<code>grub-mkconfig -o /boot/grub/grub.cfg</code>，然后 umount，拔掉 U 盘 reboot。</li><li><code>reboot</code>选择 xanmod 内核回车进入</li><li>查看当前系统内核 <code>uname -a</code></li></ol><p>二, makepkg 查看 CPU 支持到 v 几: <code>/lib/ld-linux-x86-64.so.2 --help </code> 输出的最后几行如下:</p><div class="language- vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>Subdirectories of glibc-hwcaps directories, in priority order:</span></span>
<span class="line"><span>x86-64-v4</span></span>
<span class="line"><span>x86-64-v3 (supported, searched)</span></span>
<span class="line"><span>x86-64-v2 (supported, searched)\\</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div><p>查看 CPU 线程,并修改 makepkg 配置: <code>nproc --all</code><code>nvim /etc/makepkg.conf</code><code>MAKEFLAGS=&quot;-j16&quot;</code></p><p>克隆并 makepkg: <code>git clone https://aur.archlinux.org/linux-xanmod.git</code> 再<code>cd linux-xanmod</code> 修改 PKGBUILD:</p><div class="language- vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark has-focused-lines vp-code" tabindex="0"><code><span class="line has-focus"><span>//intel改成98,AMD改成99</span></span>
<span class="line"><span>if [ -z \${_microarchitecture+x} ]; then</span></span>
<span class="line has-focus"><span>  _microarchitecture=0</span></span>
<span class="line"><span>fi</span></span>
<span class="line"><span></span></span>
<span class="line has-focus"><span>archlinux改成y</span></span>
<span class="line"><span>if [ -z \${use_tracers+x} ]; then</span></span>
<span class="line has-focus"><span>  use_tracers=n</span></span>
<span class="line"><span>fi</span></span>
<span class="line"><span></span></span>
<span class="line has-focus"><span>//在第一行上面添加一句\`_compiler=clang\` 环境变量</span></span>
<span class="line has-focus"><span>//_compiler=clang</span></span>
<span class="line has-focus"><span>if [ &quot;\${_compiler}&quot; = &quot;clang&quot; ]; then</span></span>
<span class="line"><span>  _compiler_flags=&quot;CC=clang HOSTCC=clang LLVM=1 LLVM_IAS=1&quot;</span></span>
<span class="line"><span>fi</span></span>
<span class="line"><span></span></span>
<span class="line has-focus"><span>//按照\`/lib/ld-linux-x86-64.so.2 --help \`推荐修改v几</span></span>
<span class="line"><span>if [ -z \${_config+x} ]; then</span></span>
<span class="line has-focus"><span>  _config=config_x86-64-v2</span></span>
<span class="line"><span>fi</span></span>
<span class="line"><span></span></span>
<span class="line has-focus"><span>//开启zstd,改成y</span></span>
<span class="line"><span># Compress modules with ZSTD (to save disk space)</span></span>
<span class="line"><span>if [ -z \${_compress_modules+x} ]; then</span></span>
<span class="line has-focus"><span>  _compress_modules=n</span></span>
<span class="line"><span>fi</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br></div></div><p>想要裁剪内核参考如下,用 modprobed-db: <a href="https://aur.archlinux.org/packages/modprobed-db" target="_blank" rel="noreferrer">modprobed-db AUR</a>和 <a href="https://wiki.archlinux.org/index.php/Modprobed-db" target="_blank" rel="noreferrer">modprobed-db wiki</a> ,再修改使用本地模块配置为 y</p><div class="language- vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark has-focused-lines vp-code" tabindex="0"><code><span class="line"><span>if [ -z \${_localmodcfg} ]; then</span></span>
<span class="line has-focus"><span>\\_localmodcfg=n</span></span>
<span class="line"><span>fi</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><p>最后<code>makepkg</code>,会报缺依赖，arch 默认不包含 clang 那套东西的，手动 pacman -S 装上就好了</p><h2 id="配置输入法" tabindex="-1">配置输入法 <a class="header-anchor" href="#配置输入法" aria-label="Permalink to &quot;配置输入法&quot;">​</a></h2><ol><li>安装 fcitx:</li></ol><div class="language- vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>sudo pacman -S fcitx5-im # 输入法基础包组</span></span>
<span class="line"><span>sudo pacman -S fcitx5-chinese-addons # 官方中文输入引擎</span></span>
<span class="line"><span>sudo pacman -S fcitx5-material-color # 输入法主题</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><ol start="2"><li>设置环境变量: <code>sudo vim /etc/environment</code>，写入:</li></ol><div class="language- vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>GTK_IM_MODULE=fcitx</span></span>
<span class="line"><span>QT_IM_MODULE=fcitx</span></span>
<span class="line"><span>XMODIFIERS=@im=fcitx</span></span>
<span class="line"><span>SDL_IM_MODULE=fcitx</span></span>
<span class="line"><span>GLFW_IM_MODULE=ibus</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div><ol start="3"><li>进入设置，点击语言和区域设置。再点击输入法，点击添加输入法添加拼音，配置拼音，勾选启用云拼音，配置云拼音，后端选择百度，把将嵌入预编辑文本的光标固定在开头那个选项去掉，启用预测，预测个数为 50。</li><li>之后退出来选择配置全局选项，将切换&quot;启用/禁用输入法&quot;的快捷键换为左 shift，应用。</li><li>点击右下角托盘的输入法。右键选择重新启动，之后按左 shift 或者右键选拼音，测试输入中文。</li><li>安装 nord 主题美化:</li></ol><div class="language- vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>git clone https://github.com/tonyfettes/fcitx5-nord.git</span></span>
<span class="line"><span>mkdir -p ~/.local/share/fcitx5/themes/</span></span>
<span class="line"><span>cd fcitx5-nord</span></span>
<span class="line"><span>cp -r Nord-Dark/ Nord-Light/ ~/.local/share/fcitx5/themes/</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div><p>之后进入 fcitx 配置界面，点击配置附加组件，配置经典用户界面，把主题换成 Nord-Dark。 或者直接<code>yay -S fcitx5-skin-fluentdark-git </code></p><h2 id="nvim" tabindex="-1">nvim <a class="header-anchor" href="#nvim" aria-label="Permalink to &quot;nvim&quot;">​</a></h2><p><code>cd .local/share</code><code>rm -rf nvim</code><code>cd ~</code><code>cd .config</code><code>git clone</code><code>nvim</code> 之后会自动装插件 后续键入<code>:Mason</code>装插件，输入<code>/</code>开始搜索，键入 i 下载，X 删除，JS 推荐使用 vtsls</p><h2 id="shell" tabindex="-1">Shell <a class="header-anchor" href="#shell" aria-label="Permalink to &quot;Shell&quot;">​</a></h2><ol><li>安装 zsh:<code>sudo pacman -Sy zsh</code></li><li>更改默认终端:<code>chsh -s /usr/bin/zsh</code></li><li>安装 oh-my-sh: <code>sh -c &quot;$(curl -fsSL https://gitee.com/pocmon/ohmyzsh/raw/master/tools/install.sh)&quot;</code></li><li>安装插件<code>git clone https://gitee.com/asddfdf/zsh-syntax-highlighting.git \${ZSH_CUSTOM:-~/.oh-my-zsh/custom}/plugins/zsh-syntax-highlighting</code> 和 <code>git clone https://gitee.com/chenweizhen/zsh-autosuggestions.git \${ZSH_CUSTOM:-~/.oh-my-zsh/custom}/plugins/zsh-autosuggestions</code></li><li><code>nvim .zshrc</code> ，之后<code>plugins=(git z zsh-syntax-highlighting zsh-autosuggestions)</code></li><li>安装字体:<code> sudo pacman -S oh-my-zsh-powerline-theme-git</code></li><li>配置 zsh <code>nvim .zshrc</code>，设置随机自选主题，将 ZSH_THEME_RANDOM_CANDIDATES=(&quot;ys&quot; &quot;mikeh&quot; &quot;jonathan&quot; &quot;af-magic&quot; &quot;alanpeabody&quot; ) ，再 ZSH_THEME=&quot;random&quot;即可。 \`</li></ol><h2 id="wine" tabindex="-1">wine: <a class="header-anchor" href="#wine" aria-label="Permalink to &quot;wine:&quot;">​</a></h2><ul><li>安装与配置:</li></ul><div class="language- vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>sudo pacman -S wine wine-mono wine_gecko</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><div class="language- vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>sudo wine winecfg</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><ul><li>启动应用:<code>wine .exe</code>或右键 exe 文件选择<code>使用wine windows program loader打开</code>即可</li><li>将 windows 的 C:\\Windows\\Fonts 的字体文件全部复制到 linux 下的～/.wine/drive_c/windows/Fonts 中，解决 winecfg 乱码问题。</li></ul><h2 id="minecraft" tabindex="-1">MineCraft <a class="header-anchor" href="#minecraft" aria-label="Permalink to &quot;MineCraft&quot;">​</a></h2><p>安装启动器 : <code>sudo pacman -S hmcl</code> 打开会乱码，安装字体: <code>yay -S ttf-harmonyos-sans</code></p><ul><li>添加一个离线账户</li><li>进入设置到全局游戏设置，将启动器进入设置到全局游戏设置，将启动器可见性设置为<code>隐藏启动器并在游戏结束后重新打开</code>，自定义外观，进入下载版本列表源勾选自动选择下载源，尽量使用官方源。</li><li>下载游戏包，玩模组多的安装 forge，光影安装 Optifnie(我的电脑无法装光影)，安装。</li><li>启动游戏，弹出警告则选择继续启动。</li></ul><h2 id="内存与存储" tabindex="-1">内存与存储 <a class="header-anchor" href="#内存与存储" aria-label="Permalink to &quot;内存与存储&quot;">​</a></h2><h3 id="开启-zram" tabindex="-1">开启 zram: <a class="header-anchor" href="#开启-zram" aria-label="Permalink to &quot;开启 zram:&quot;">​</a></h3><ol><li><code>sudo pacman -S zram-generator</code></li><li><code>touch /etc/systemd/zram-generator.conf</code></li><li><code>nvim /etc/systemd/zram-generator.conf</code></li></ol><div class="language- vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>[zram0]</span></span>
<span class="line"><span>zram-size = ram / 2</span></span>
<span class="line"><span>compression-algorithm = lz4</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><h3 id="btrfs-透明压缩" tabindex="-1">btrfs 透明压缩 <a class="header-anchor" href="#btrfs-透明压缩" aria-label="Permalink to &quot;btrfs 透明压缩&quot;">​</a></h3><p><code>sudo pacman -S btrfs-progs</code><code>sudo btrfs filesystem defragment -r -v -czstd /</code></p><h2 id="plymouth" tabindex="-1">plymouth <a class="header-anchor" href="#plymouth" aria-label="Permalink to &quot;plymouth&quot;">​</a></h2><p>安装 plymouth 包: <code>sudo pacman -S plymouth</code><br> 添加内核参数:<code>sudo nvim /etc/default/grub</code>如下:</p><div class="language- vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>GRUB_CMDLINE_LINUX_DEFAULT=&quot;loglevel=1 quiet nowatchdog splash rd.udev.log_priority=3 vt.global_cursor_default=0 fbcon=nodefer&quot;</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><p>添加钩子:<code>sudo nvim /etc/mkinitcpio.conf</code> 添加<code>HOOKS=(... plymouth ...)</code></p><p>查看自带主题:<code>plymouth-set-default-theme -l</code><br> 设置主题:<code>plymouth-set-default-theme -R theme</code></p><h2 id="sddm" tabindex="-1">sddm <a class="header-anchor" href="#sddm" aria-label="Permalink to &quot;sddm&quot;">​</a></h2><p>依赖:(qt6-5compat qt6-declarative qt6-svg sddm)</p><div class="language- vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>sudo git clone https://github.com/keyitdev/sddm-astronaut-theme.git /usr/share/sddm/themes/sddm-astronaut-theme</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><div class="language- vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>sudo cp /usr/share/sddm/themes/sddm-astronaut-theme/Fonts/* /usr/share/fonts/</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><div class="language- vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>echo &quot;[Theme]</span></span>
<span class="line"><span>Current=sddm-astronaut-theme&quot; | sudo tee /etc/sddm.conf</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><h2 id="grub" tabindex="-1">grub <a class="header-anchor" href="#grub" aria-label="Permalink to &quot;grub&quot;">​</a></h2><ol><li>去<a href="https://www.gnome-look.org/p/2142488" target="_blank" rel="noreferrer">gnome-look</a>下载主题.</li><li>解压拷贝到/boot/grub/themes/</li><li><code>nvim /etc/default/grub</code>修改<code>GRUB_THEME=/boot/grub/themes/(theme-name)/theme.txt</code></li><li>更新 grub 配置: <code>sudo grub-mkconfig -o /boot/grub/grub.cfg</code></li></ol>`,74),o=[l];function c(t,p,d,r,h,u){return e(),a("div",null,o)}const k=s(i,[["render",c]]);export{b as __pageData,k as default};
